package com.fruit.model;

import com.fruit.core.model.Condition;
import com.fruit.core.model.Operators;
import com.fruit.model.base.BaseConsoleSequence;
import org.apache.log4j.Logger;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class ConsoleSequence extends BaseConsoleSequence<ConsoleSequence> {
    private Logger logger = Logger.getLogger(getClass());
    public static final ConsoleSequence dao = new ConsoleSequence();

    public String generateSequence(String category) {
        Set<Condition> conditions = new HashSet<Condition>();
        conditions.add(new Condition("category", Operators.EQ, category));
        ConsoleSequence sequence = dao.get(conditions);
        int code = 100000;
        if (sequence != null) {
            code = sequence.getInt("code");
        }

        boolean loop = true;
        Map<String, Object> keyValue = new HashMap<String, Object>();
        while (loop) {
            try {
                keyValue.put("code", ++code);
                if (code == 100001) {
                    sequence = new ConsoleSequence();
                    sequence.set("category", category).set("code", code).save();
                } else {
                    dao.update(conditions, keyValue);
                }
                loop = false;
            } catch (Exception e) {
                logger.error(String.format("category [%s] value [%s] is old...", category, code));
            }
        }
        return String.valueOf(code);
    }
}
